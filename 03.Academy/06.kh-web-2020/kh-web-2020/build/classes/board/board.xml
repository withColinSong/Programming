<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<select id="all_serial" resultType="int">
		SELECT serial FROM board
	</select>
	
	<select id="one_serial" resultType="int">
		SELECT serial FROM board WHERE serial = 1
	</select>

	<select id="list" resultType="board.BoardVo"> <!-- 쿼리문을 실행해서 데이터들을 BoardVo에 담아라. -->
		SELECT * FROM board
	</select>
	
	<select id="view" resultType="board.BoardVo" parameterType="int">
		SELECT * FROM board WHERE serial = #{_parameter}
	</select>
	
	<select id="tot_list_size" resultType='int' parameterType="bean.Page">
		select count(serial) from board
		where subject like '%${findStr}%' or doc like '%${findStr}%'
	</select>

	<select id="select_att" resultType="board.BoardAttVo" parameterType="int">
		select * from boardAtt where pserial = #{_parameter}
	</select>

	<select id="select" resultType="board.BoardVo" parameterType="bean.Page">
		<![CDATA[
		select * from (
			select rownum rno, m.* from
			   ( select b.serial , b.mid, b.mdate, b.hit,
			    	   lpad(' ', (level-1)*6+1, '&nbsp;&nbsp;') || decode(level, 1, '', '└ ') || b.subject subject,
			    	(select count(serial) cnt from boardAtt where pserial=b.serial) attCnt 
				from board b where subject like '%${findStr}%' or doc like '%${findStr}%' 
				connect by prior serial = pserial
				start with pserial is null
				order siblings by serial desc ) m
		) where rno between #{startNo} and #{endNo}
		]]>	 
	</select>

	<insert id="insert" parameterType="board.BoardVo">
		insert all
		into board(serial, mid, pwd, subject, doc, mdate, hit) 
		values(seq_board.nextval, #{mid} , #{pwd},  #{subject} , #{doc}, sysdate, 0 )
		<if test="attList != null">
			<foreach collection="attList" item="att">
				into boardAtt(serial, pserial, sysfile, orifile)
				values(getBoardAttSeq(), seq_board.currval, #{att.sysFile}, #{att.oriFile} )
			</foreach>
		</if>
		select * from dual
	</insert>

	<insert id="insert_repl" parameterType="board.BoardVo">
		insert all
		into board(serial, mid, pwd, subject, doc, mdate, hit, pSerial) 
		values(seq_board.nextval, #{mid} , #{pwd},  #{subject} , #{doc}, sysdate, 0, #{pSerial} )
		<if test="attList != null">
			<foreach collection="attList" item="att">
				into boardAtt(serial, pserial, sysfile, orifile)
				values(getBoardAttSeq(), seq_board.currval, #{att.sysFile}, #{att.oriFile} )
			</foreach>
		</if>
		select * from dual
	</insert>


	<update id="update" parameterType="board.BoardVo">
		update board set subject=#{subject}, doc=#{doc} where serial = #{serial} and pwd=#{pwd}
	</update>

	<insert id="insert_att" parameterType="board.BoardVo">
		insert all
		<foreach collection="attList" item="att">
			into boardAtt(serial, pserial, sysfile, orifile)
			values(getBoardAttSeq(), #{serial}, #{att.sysFile}, #{att.oriFile} )
		</foreach>	
		select * from dual
	</insert>


	<delete id="delete" parameterType="board.BoardVo">
		delete from board where serial=#{serial} and pwd=#{pwd}
	</delete>

	<delete id="delete_att_pserial" parameterType="Integer">
		delete from boardAtt where pSerial = #{_parameter}
	</delete>

	<delete id="delete_att" parameterType="board.BoardVo">
		delete from boardAtt
		<where>
			<foreach collection="delFiles" item="att" separator="or">
				sysfile = #{att.sysFile}
			</foreach>
		</where>
	</delete>
	
	<!--  
	<select id="select" resultType="board.BoardVo" parameterType="String">
		SELECT * FROM board WHERE subject LIKE '%${_parameter}%' OR doc LIKE '%${_parameter}%'
	
	</select>
	
	
	<insert id="insert" parameterType="board.BoardVo">
		INSERT INTO board(serial, mid, pwd) VALUES(seq_board.nextval, #{mid}, #{pwd})
	</insert>
	
	<update id="update" parameterType="board.BoardVo">
		UPDATE board SET subject = #{subject}, doc = #{doc} WHERE serial = #{serial} AND pwd = #{pwd}
	</update>
	
	<delete id="delete" parameterType="board.BoardVo">
		DELETE FROM board WHERE serial = #{serial} AND pwd = #{pwd}
	</delete>
	-->
</mapper>